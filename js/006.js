/*
 * Перебирающие методы массива
 */

/*
 *
 * - forEach()
 * 
 * Array.prototype.forEach()
 * Поэлементно переберает оригинальный массив
 * Ничего не возвращает
 * Не изменяет инкремент
 * Заменяет классический for если не нужно прерывать цикл
 * 
 */

/*

// - Общая концепция:

// имеем массив
const numbers = [5, 10, 15, 20, 25];

// вызываем форИч в контексте массива
// в скобках() я передаю колбек, которая будет
// выполнена для каждоко элемента массива

numbers.forEach(function (element, index, array) {
  console.log(element); // текущий элемент во время перебора
  console.log(index); // текущий индекс
  console.log(array); // весь оригинальный массив
});

*/

/*
 *
 * - map
 * 
 * Array.prototype.map()
 * Поэлементно перебирает оригинальный массив
 * Возвращает новый массив такой же длины
 * 
 */

/*

// Общая концепция:

// имеем массив 
const numbers = [5, 10, 15, 20, 25];

// 1. вызываем метод меп в контексте массива
// передаем функцию для каждого элемента коллекции

const mappedNumbers = numbers.map(function (element) {
  console.log(element);

  // 2. возвращаем эл умноженый на 2

  return element * 2

});

console.log(numbers) // оригинал не мутируется log (5) [5, 10, 15, 20, 25]
console.log(mappedNumbers) // результат - log (5) [10, 20, 30, 40, 50]

*/
