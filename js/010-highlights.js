
/* ===========================================
** Webpack starter kit

01. Создаем новый репо с именем webpack-module-10
без ридми и гитигнор. Просто имя и жмем Создать

02. В терминале переходим в папку GitHub
cd documents/github

03. Клонируем репо Репеты
git clone https://github.com/luxplanjay/webpack-starter-kit.git

04. Переименовуем папку сборки
mv webpack-starter-kit webpack-module-10

05. Переходим в папку проекта
cd webpack-module-10

06. Удаляем папку .git связанную с репозиторием сборки 
npx rimraf .git

07. Устанавливаем все зависимости
npm install

08. Открываем проект в IDE
open -a visual\ studio\ code .

09. Запустить режим разработки
npm start

10. CSS =-> SCSS
- Создаем src > sass 
- Переименовуем styles.css в styles.scss
- Переперемещаем в sass > styles.scss
- В index.js изменяем путь - import './styles.scss';
- В index.html удаляем лишнее

11. Создаём в текущей директории новую поддиректорию с именем .git
git init

12. Связываем локальный репо с удаленным
git remote add origin https://github.com/itstoreall/webpack-module-10.git

13. Добавляем файлы в каталоге под версионный контроль
git add .

14. Делаем первый коммит
git commit -m "first commit"

15. Переименовываем ветку в main
git branch -M main

16. Пушим на гитхаб
git push -u origin main

17. Создаем оптимизированные файлы для хостинга
npm run build

18. В файле package.json редактируем поле homepage
"homepage": "https://имя_пользователя.github.io/имя_репозитория"

19. Запускаем сборку проекта в продакшен (в ветку gh-pages)
npm run deploy

// Комитим и пушим на гитхаб (уже в процессе работы)

git add . (добавляем файлы)
git status (проверяем статус)
git commit -m "qwe" (коммитим)
git push (пушим)

// Изменить ссылку на удаленный репозиторий

git remote -v (просмотр списка удаленных репозиториев)
git remote set-url origin https://github.com/другой-репо.git (изменение)

------------------------------------------- */

/* ===========================================
** Terminal

control+a (перейти в начало строки)
control+e (перейти в конец строки)

echo "любой текст" (просто выводит текст в терминал)
set -o (показывает опции терминала)
man имя_команды (показывает иануал команды)
q (выходит из мануала команды)

- В папке

ls (все файлы и папки)
ls -l (..расширено)
ls -a (..и скрытые файлы)
ls -t (..отсортировать по времени)
ls -lat (..все вместе)
ls имя_папки (войти в папку)
ls имя_папки/имя_папки (..в папке)
cd имя_папки (переходим в папку)
cd .. (шаг назад)
cd ~ (вернуться в корень)
pwd (покывает путь, где мы находимся)
open . (открывает текущую папку в finder)
open имя_файла (открывает файл) 
open -a sublime\ text index.html (открыть файл саблайме)

- Работа с файлами и папками

touch somefile (создает файл в текущей папке)
nano (редактор кода в терминале)
mkdir имя_папки (создать папку)
touch имя_папки/имя_файла (создать файл в папке)
mv имя_файла имя_папки (переместить файл в паку)
touch f1 f2 f3 (создает несколько файлов)
mv f* foto (переместит все файлы с символами имени до* в папку foto)
mv имя_файла имя_файла2 (переименовует файл в другой)
cp имя_файла имя_файла.html (копирует файл с новым именем)
cp -r имя_папки имя_папки2 (скопировать папку рекурсивно)
rm имя_файла (удаляет файл)
rmdir имя_папки (удалить пустую папку)
rm -r имя_папки (удаляет папку рекурсивно)

- Ссылки

ln -s имя_файла имя_ссылки (создает sift ссылку)
ln имя_файла имя_ссылки (создает hard ссылку)
cat имя_файла (показывает контент в терминале)

- Поиск файлов

------------------------------------------- */

